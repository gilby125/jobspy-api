name: Deploy to Portainer

on:
  workflow_dispatch:  # Manual trigger only
  # Uncomment below when webhook is accessible
  # push:
  #   branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Skip if webhook not accessible
    if: ${{ vars.PORTAINER_WEBHOOK_ENABLED == 'true' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check webhook URL secret
      run: |
        if [ -z "${{ secrets.PORTAINER_WEBHOOK_URL }}" ]; then
          echo "❌ PORTAINER_WEBHOOK_URL secret is not set!"
          echo "Please configure the webhook URL in GitHub repository secrets."
          exit 1
        else
          echo "✅ PORTAINER_WEBHOOK_URL secret exists"
        fi
        
    - name: Trigger Portainer Webhook
      id: deploy
      run: |
        echo "Triggering Portainer deployment..."
        
        # Test with timeout and verbose error reporting
        response=$(curl -s -w "%{http_code}" --connect-timeout 30 --max-time 60 -X POST "${{ secrets.PORTAINER_WEBHOOK_URL }}" 2>&1)
        exit_code=$?
        
        if [ $exit_code -ne 0 ]; then
          echo "❌ Curl failed with exit code $exit_code"
          case $exit_code in
            6) echo "Couldn't resolve host" ;;
            7) echo "Failed to connect to host" ;;
            28) echo "Operation timeout" ;;
            *) echo "Unknown curl error" ;;
          esac
          echo "Response: $response"
          echo "deployment_status=failed" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        http_code="${response: -3}"
        
        echo "HTTP Code: $http_code"
        echo "Response: $response"
        
        if [ "$http_code" -eq 200 ] || [ "$http_code" -eq 204 ]; then
          echo "✅ Deployment triggered successfully (HTTP $http_code)"
          echo "deployment_status=success" >> $GITHUB_OUTPUT
        else
          echo "❌ Deployment failed (HTTP $http_code)"
          echo "deployment_status=failed" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: Wait for deployment
      if: steps.deploy.outputs.deployment_status == 'success'
      run: |
        echo "⏳ Waiting for deployment to complete..."
        sleep 45
        
    - name: Verify deployment
      if: steps.deploy.outputs.deployment_status == 'success'
      run: |
        echo "🔍 Verifying deployment..."
        # Optional: Add health check here
        # curl -f http://your-app-url/health || exit 1
        echo "✅ Deployment completed successfully"
        
    - name: Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ steps.deploy.outputs.deployment_status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY